[{"/home/ahnhc/proj/crow/src/index.js":"1","/home/ahnhc/proj/crow/src/components/App.js":"2","/home/ahnhc/proj/crow/src/components/Router.js":"3","/home/ahnhc/proj/crow/src/routes/Auth.js":"4","/home/ahnhc/proj/crow/src/routes/Home.js":"5","/home/ahnhc/proj/crow/src/firebaseSetup.js":"6","/home/ahnhc/proj/crow/src/components/Navigation.js":"7","/home/ahnhc/proj/crow/src/routes/Profile.js":"8","/home/ahnhc/proj/crow/src/constants.js":"9","/home/ahnhc/proj/crow/src/components/Crow.js":"10","/home/ahnhc/proj/crow/src/components/CrowFactory.js":"11","/home/ahnhc/proj/crow/src/components/Auth/AuthForm.js":"12","/home/ahnhc/proj/crow/src/components/LoadSpinner.js":"13","/home/ahnhc/proj/crow/src/entities/Button/LoadingButton.js":"14"},{"size":205,"mtime":1606456554321,"results":"15","hashOfConfig":"16"},{"size":1470,"mtime":1606465446959,"results":"17","hashOfConfig":"16"},{"size":1047,"mtime":1606464589267,"results":"18","hashOfConfig":"16"},{"size":2308,"mtime":1606471127504,"results":"19","hashOfConfig":"16"},{"size":796,"mtime":1606402913024,"results":"20","hashOfConfig":"16"},{"size":716,"mtime":1606397936253,"results":"21","hashOfConfig":"16"},{"size":360,"mtime":1606401288381,"results":"22","hashOfConfig":"16"},{"size":1479,"mtime":1606406516183,"results":"23","hashOfConfig":"16"},{"size":33,"mtime":1606389320364,"results":"24","hashOfConfig":"16"},{"size":1862,"mtime":1606399330501,"results":"25","hashOfConfig":"16"},{"size":1795,"mtime":1606403057723,"results":"26","hashOfConfig":"16"},{"size":3711,"mtime":1606469344160,"results":"27","hashOfConfig":"16"},{"size":722,"mtime":1606466012016,"results":"28","hashOfConfig":"16"},{"size":774,"mtime":1606470291654,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1fi6rxb",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ahnhc/proj/crow/src/index.js",[],["62","63"],"/home/ahnhc/proj/crow/src/components/App.js",[],"/home/ahnhc/proj/crow/src/components/Router.js",[],"/home/ahnhc/proj/crow/src/routes/Auth.js",[],"/home/ahnhc/proj/crow/src/routes/Home.js",[],"/home/ahnhc/proj/crow/src/firebaseSetup.js",[],"/home/ahnhc/proj/crow/src/components/Navigation.js",[],"/home/ahnhc/proj/crow/src/routes/Profile.js",["64"],"import { authService, dbService } from 'firebaseSetup';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { COLLECTION } from '../constants';\n\nconst Profile = ({ userObject, refreshUser }) => {\n  const history = useHistory();\n  const [userName, setUserName] = useState(userObject.displayName);\n\n  const onLogoutClick = () => {\n    authService.signOut();\n    history.push('/');\n  }\n\n  const getMyProfile = async () => {\n    const crows = await dbService\n      .collection(COLLECTION)\n      .where('creatorId', '==', userObject.uid)\n      // .orderBy('createdAt')\n      .get();\n\n    const data = crows.docs.map(doc => doc.data());\n    console.log('data', data);\n  };\n\n  const onChange = (event) => {\n    const { target : { value } } = event;\n    setUserName(value);\n  }\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObject.displayName !== userName) {\n      // TODO: user image set\n      await userObject.updateProfile({\n        displayName: userName,\n      });\n      refreshUser();\n    }\n  }\n\n  useEffect(() => {\n    getMyProfile();\n  }, []);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={userName}\n          onChange={onChange}\n        />\n        <button>내 정보 업데이트</button>\n      </form>\n      <button onClick={onLogoutClick}>Logout</button>\n    </>\n  )\n}\n\nexport default Profile;","/home/ahnhc/proj/crow/src/constants.js",[],"/home/ahnhc/proj/crow/src/components/Crow.js",["65"],"import React, { useState } from 'react';\nimport { dbService, storageService } from 'firebaseSetup';\nimport { COLLECTION } from '../constants';\n\nconst Crow = ({ crowObject, isOwner }) => {\n  const userDoc = `${COLLECTION}/${crowObject.id}`;\n  const [isEditing, setIsEditing] = useState(false);\n  const [newCrow, setNewCrow] = useState(crowObject.text);\n\n  const toggleEditing = () => setIsEditing(prev => !prev);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm('삭제하시겠습니까악?');\n    if (ok) {\n      await dbService.doc(userDoc).delete();\n      await storageService.refFromURL(crowObject.imgUrl).delete();\n    }\n  };\n\n  const onEditChange = (event) => {\n    const { target : { value } } = event;\n    setNewCrow(value);\n  }\n\n  const onEditCancle = () => {\n    setIsEditing(false);\n    setNewCrow(crowObject.text);\n  }\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(userDoc).update({\n      text: newCrow,\n    });\n    setIsEditing(false);\n  }\n\n  return (\n    <div>\n      { isEditing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              value={newCrow}\n              required\n              placeholder=\"글을 작성해라 까악~\"\n              onChange={onEditChange}\n            />\n            <button>수정</button>\n            <button type=\"button\" onClick={onEditCancle}>취소</button>\n          </form>\n        </>\n      ) : (\n        <>\n          <h4>{crowObject.text}</h4>\n          { crowObject.imgUrl &&\n            <img src={crowObject.imgUrl} width=\"50px\" height=\"50px\" />\n          }\n          { isOwner && <>\n            <button onClick={onDeleteClick}>Delete Crow</button>\n            <button onClick={toggleEditing}>Edit Crow</button>\n          </> }\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Crow;","/home/ahnhc/proj/crow/src/components/CrowFactory.js",["66"],"import React, { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { dbService, storageService } from 'firebaseSetup';\nimport { COLLECTION } from '../constants';\n\nconst CrowFactory = ({ userObject }) => {\n  const [crow, setCrow] = useState('');\n  const [base64, setBase64] = useState();\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    let imgUrl = '';\n    if (base64) {\n      const fileRef = storageService.ref().child(`${userObject.uid}/${uuid()}`);\n      const res = await fileRef.putString(base64, 'data_url');\n      imgUrl = await res.ref.getDownloadURL();\n      onClearFile();\n    }\n\n    await dbService.collection(COLLECTION).add({\n      text: crow,\n      createdAt: Date.now(),\n      creatorId: userObject.uid,\n      ...imgUrl && { imgUrl },\n    });\n    setCrow('');\n  }\n\n  const onChange = (event) => {\n    const { target: { value } } = event;\n    setCrow(value);\n  };\n\n  const onFileCHange = (event) => {\n    const { target: { files } } = event;\n    const [file] = files;\n    const reader = new FileReader();\n    reader.onloadend = (loadEvent) => {\n      // finish file load\n      setBase64(loadEvent.currentTarget.result);\n    }\n    reader.readAsDataURL(file);\n  }\n\n  const onClearFile = () => setBase64(null);\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"까악!\"\n        maxLength={120}\n        value={crow}\n        onChange={onChange}\n      />\n      <input type=\"file\" accept=\"image/*\" onChange={onFileCHange} />\n      <button>까악하기</button>\n      { base64 && (\n        <div>\n          <img src={base64} width=\"50px\" height=\"50px\" />\n          <button type=\"button\" onClick={onClearFile}>사진지우기</button>\n        </div>\n      )}\n    </form>\n  )\n}\n\nexport default CrowFactory;","/home/ahnhc/proj/crow/src/components/Auth/AuthForm.js",["67"],"/home/ahnhc/proj/crow/src/components/LoadSpinner.js",[],"/home/ahnhc/proj/crow/src/entities/Button/LoadingButton.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":44,"column":6,"nodeType":"74","endLine":44,"endColumn":8,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":58,"column":13,"nodeType":"78","endLine":58,"endColumn":71},{"ruleId":"76","severity":1,"message":"77","line":61,"column":11,"nodeType":"78","endLine":61,"endColumn":58},{"ruleId":"79","severity":1,"message":"80","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":16},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyProfile'. Either include it or remove the dependency array.","ArrayExpression",["85"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [getMyProfile]",{"range":"88","text":"89"},[1125,1127],"[getMyProfile]"]