{"version":3,"sources":["firebaseSetup.js","entities/Button/LoadingButton.js","components/AuthForm.js","image/crow.jpg","routes/Auth.js","routes/Profile.js","constants.js","components/Crow.js","components/CrowFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/LoadSpinner.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","LoadingButton","type","variant","className","buttonClick","name","children","isLoading","Button","disabled","onClick","Spinner","as","animation","size","role","aria-hidden","AuthForm","newAccount","toggleSubmitting","isSubmitting","useState","email","setEmail","password","setPassword","recapPassword","setRecapPassword","passwordRef","useRef","error","setError","errorCss","erorrRef","timeout","enter","exit","errorText","text","current","erorrAnimationReload","animationClass","classList","remove","add","setTimeout","onChange","event","target","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Form","Control","placeholder","required","CSSTransition","nodeRef","in","classNames","unmountOnExit","ref","Boolean","mountOnEnter","Auth","setNewAccount","setIsSubmitting","useEffect","onSocialClick","currentTarget","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Image","src","crow","roundedCircle","prev","icon","faGoogle","faGithub","Profile","userObject","refreshUser","history","useHistory","displayName","userName","setUserName","updateProfile","signOut","push","COLLECTION","Crow","crowObject","isOwner","userDoc","id","isEditing","setIsEditing","newCrow","setNewCrow","cardRef","cardFixedRef","onDeleteClick","window","confirm","doc","delete","refFromURL","imgUrl","update","faPen","faTrashAlt","width","height","alt","CrowFactory","setCrow","base64","setBase64","imageFileRef","attachRef","fileRef","child","uid","uuid","putString","res","getDownloadURL","onClearFile","collection","createdAt","Date","now","creatorId","maxLength","faCrow","htmlFor","faPlus","accept","files","file","reader","FileReader","onloadend","loadEvent","result","readAsDataURL","Home","crows","setCrows","onSnapshot","snap","snaps","docs","map","data","item","Navigation","to","faHome","faUser","AppRouter","isLoggedIn","exact","path","LoadSpinner","isLoadded","App","init","setUserObject","setIsLoadded","onAuthStateChanged","user","args","Container","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.150ce992.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React from 'react';\nimport { Button, Spinner } from 'react-bootstrap';\nimport './LoadingButton.scss';\n\nconst LoadingButton = ({\n  type = 'button',\n  variant = '',\n  className = '',\n  buttonClick = null,\n  name = '',\n  children = null,\n  isLoading,\n}) => {\n  return (\n    <Button\n      type={type}\n      name={name}\n      variant={variant}\n      className={`${className} loading-button`}\n      disabled={isLoading}\n      onClick={buttonClick}\n    >\n      { isLoading ? (\n        <>\n          <Spinner\n            as=\"span\"\n            animation=\"border\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          />\n          {/* <span>&nbsp;로딩중</span> */}\n        </>\n      ) : children}\n    </Button>\n  );\n}\n\nexport default LoadingButton;","import { authService } from 'firebaseSetup';\nimport React, { useState, useRef } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { CSSTransition } from 'react-transition-group';\nimport './AuthForm.scss';\nimport LoadingButton from 'entities/Button/LoadingButton';\n\nconst AuthForm = ({ newAccount, toggleSubmitting, isSubmitting }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [recapPassword, setRecapPassword] = useState('');\n\n  const passwordRef = useRef(null);\n\n  const [error, setError] = useState(null);\n  const errorCss = 'error-alram';\n  const erorrRef = useRef(null);\n  const timeout = {\n    enter: 100,\n    exit: 100,\n  }\n\n  const errorText = (text = null) => {\n    setError(text);\n    if (text && erorrRef.current) {\n      erorrAnimationReload();\n    }\n  }\n\n  const erorrAnimationReload = () => {\n    const animationClass = erorrRef.current.classList;\n    animationClass.remove(`${errorCss}-enter-done`);\n    animationClass.add(`${errorCss}-enter-active`);\n    setTimeout(() => {\n      animationClass.remove(`${errorCss}-enter-active`);\n      animationClass.add(`${errorCss}-enter-done`);\n    }, timeout.enter)\n  }\n\n  const onChange = (event) => {\n    const { target : { name, value } } = event;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    } else if (name === 'password2') {\n      setRecapPassword(value);\n    }\n  }\n\n  const onSubmit = async (event) => {\n    if (isSubmitting) return;\n    event.preventDefault();\n    toggleSubmitting(true);\n    try {\n      if (newAccount) {\n        // create account\n        if (password !== recapPassword) {\n          errorText(`비밀번호가 다르다 까악!`);\n          toggleSubmitting(false);\n          return;\n        }\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        // login\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n      errorText()\n    } catch (error) {\n      errorText(error.message);\n    }\n    toggleSubmitting(false);\n  }\n\n  return (<>\n    <Form\n      onSubmit={onSubmit}\n      className=\"login__auth-container\"\n    >\n      <Form.Control\n        name=\"email\"\n        type=\"text\"\n        className=\"auth-containter--input\"\n        placeholder=\"Email\"\n        required\n        value={email}\n        onChange={onChange} />\n      <Form.Control\n        name=\"password\"\n        type=\"password\"\n        className=\"auth-containter--input\"\n        placeholder=\"Password\"\n        required\n        value={password}\n        onChange={onChange} />\n      <CSSTransition\n        nodeRef={passwordRef}\n        in={newAccount}\n        timeout={200}\n        classNames=\"second-password\"\n        unmountOnExit\n      >\n        <Form.Control\n          ref={passwordRef}\n          name=\"password2\"\n          type=\"password\"\n          className=\"auth-containter--input\"\n          placeholder=\"Recap Password\"\n          required\n          value={recapPassword}\n          onChange={onChange} />\n      </CSSTransition>\n\n      <LoadingButton\n        type=\"submit\"\n        variant=\"\"\n        className=\"base-button auth-containter--submit\"\n        isLoading={isSubmitting}\n      >\n        {newAccount ? '유저 생성' : '로그인'}\n      </LoadingButton>\n\n      <CSSTransition\n        nodeRef={erorrRef}\n        in={Boolean(error)}\n        timeout={timeout}\n        classNames={errorCss}\n        mountOnEnter\n        unmountOnExit\n      >\n        <span\n          ref={erorrRef}\n          className=\"auth-container--text\"\n        >\n          { error }\n        </span>\n      </CSSTransition>\n    </Form>\n  </>);\n}\n\nexport default AuthForm;","export default __webpack_public_path__ + \"static/media/crow.e50c965f.jpg\";","import AuthForm from 'components/AuthForm';\nimport { authService, firebaseInstance } from 'firebaseSetup';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Image } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub, faGoogle } from \"@fortawesome/free-brands-svg-icons\"\nimport LoadingButton from 'entities/Button/LoadingButton';\nimport './Auth.scss'\nimport crow from 'image/crow.jpg';\n\nconst Auth = () => {\n  const [newAccount, setNewAccount] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (isSubmitting) {\n      if (newAccount) {\n        setNewAccount(false);\n      }\n    }\n  }, [isSubmitting])\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  const toggleSubmitting = (isSubmitting) => setIsSubmitting(isSubmitting);\n\n  const onSocialClick = async (event) => {\n    if (isSubmitting) return;\n    const { currentTarget: { name } } = event;\n    let provider;\n\n    setIsSubmitting(true);\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    setTimeout(() => {\n      setIsSubmitting(false);\n    }, 5000);\n    await authService.signInWithPopup(provider);\n  }\n\n  return (\n    <div className=\"login-container\">\n      <span className=\"login-container--title\">Crow</span>\n      <Image className=\"crow-image\" src={`${crow}`} roundedCircle />\n      <AuthForm\n        newAccount={newAccount}\n        toggleSubmitting={toggleSubmitting}\n        isSubmitting={isSubmitting}\n      />\n      <div className=\"login-container__option-container\">\n        <Button\n          onClick={toggleAccount}\n          variant=\"\"\n          className=\"base-button\"\n        >\n          {newAccount ? '로그인하기' : '유저 생성하기' }\n        </Button>\n        <LoadingButton\n          buttonClick={onSocialClick}\n          name=\"google\"\n          variant=\"\"\n          className=\"google-button\"\n          isLoading={isSubmitting}\n        >\n          <FontAwesomeIcon icon={faGoogle} />&nbsp;구글 로그인\n        </LoadingButton>\n        <LoadingButton\n          buttonClick={onSocialClick}\n          name=\"github\"\n          variant=\"\"\n          className=\"github-button\"\n          isLoading={isSubmitting}\n        >\n          <FontAwesomeIcon icon={faGithub} />&nbsp;깃허브 로그인\n        </LoadingButton>\n      </div>\n    </div>\n  )\n}\n\nexport default Auth;","import { authService, dbService } from 'firebaseSetup';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n// import { COLLECTION } from '../constants';\nimport './Profile.scss';\nimport { Form, Button } from 'react-bootstrap';\nimport LoadingButton from '../entities/Button/LoadingButton';\n\nconst Profile = ({ userObject, refreshUser }) => {\n  const history = useHistory();\n  const [userName, setUserName] = useState(userObject.displayName);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const onLogoutClick = () => {\n    authService.signOut();\n    history.push('/');\n  }\n\n  // const getMyProfile = async () => {\n  //   const crows = await dbService\n  //     .collection(COLLECTION)\n  //     .where('creatorId', '==', userObject.uid)\n  //     // .orderBy('createdAt')\n  //     .get();\n\n  //   crows.docs.map(doc => doc.data());\n  // };\n\n  // useEffect(() => {\n  //   getMyProfile();\n  // }, []);\n\n  const onChange = (event) => {\n    const { target : { value } } = event;\n    setUserName(value);\n  }\n\n  const onSubmit = async (event) => {\n    if (isSubmitting) return;\n    setIsSubmitting(true);\n    event.preventDefault();\n    if (userObject.displayName !== userName) {\n      // TODO: user image set\n      await userObject.updateProfile({\n        displayName: userName,\n      });\n      refreshUser();\n    }\n    setIsSubmitting(false);\n  }\n\n  return (\n    <>\n      <Form\n        onSubmit={onSubmit}\n        className=\"profile-form\">\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={userName}\n          onChange={onChange}\n          className=\"profile-form--input\"\n          disabled={isSubmitting}\n        />\n        <LoadingButton\n          type=\"submit\"\n          className=\"fixed-button profile-btn profile__fixed-button\"\n          variant=\"\"\n          isLoading={isSubmitting}>내 정보 업데이트</LoadingButton>\n      </Form>\n      <Button\n        type=\"button\"\n        className=\"cancle-button profile-btn\"\n        variant=\"\"\n        onClick={onLogoutClick}>Logout</Button>\n    </>\n  )\n}\n\nexport default Profile;","export const COLLECTION = 'crow';","import React, { useState, useEffect, useRef } from 'react';\nimport { dbService, storageService } from 'firebaseSetup';\nimport { COLLECTION } from '../constants';\nimport { Form, Button } from 'react-bootstrap';\nimport { faPen, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport LoadingButton from '../entities/Button/LoadingButton';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CSSTransition } from 'react-transition-group';\nimport './Crow.scss';\n\nconst Crow = ({ crowObject, isOwner }) => {\n  const userDoc = `${COLLECTION}/${crowObject.id}`;\n  const [isEditing, setIsEditing] = useState(false);\n  const [newCrow, setNewCrow] = useState(crowObject.text);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const cardRef = useRef(null);\n  const cardFixedRef = useRef(null);\n\n  const cardCss = 'crow-animation';\n  const cardFixedCss = 'crow-fixed-animation';\n  const cardTimeout = 500;\n\n  useEffect(() => {\n    return () => {\n      setIsEditing(false);\n      setNewCrow(null);\n      setIsSubmitting(false);\n    }\n  }, []);\n\n  const toggleEditing = () => {\n    setIsEditing(prev => !prev);\n  }\n\n  const onDeleteClick = async () => {\n    if (isSubmitting) return;\n    setIsSubmitting(true);\n    const ok = window.confirm('삭제하시겠습니까악?');\n    if (ok) {\n      await dbService.doc(userDoc).delete();\n      await storageService.refFromURL(crowObject.imgUrl).delete();\n    }\n    setIsSubmitting(false);\n  };\n\n  const onEditChange = (event) => {\n    const { target : { value } } = event;\n    setNewCrow(value);\n  }\n\n  const onEditCancle = () => {\n    setIsEditing(false);\n    setNewCrow(crowObject.text);\n  }\n\n  const onSubmit = async (event) => {\n    if (isSubmitting) return;\n    setIsSubmitting(true);\n    event.preventDefault();\n    await dbService.doc(userDoc).update({\n      text: newCrow,\n    });\n    setIsEditing(false);\n    setIsSubmitting(false);\n  }\n\n  return (\n    <>\n      <CSSTransition\n        nodeRef={cardFixedRef}\n        in={isEditing}\n        timeout={cardTimeout}\n        classNames={cardFixedCss}\n        mountOnEnter\n        unmountOnExit\n      >\n        <div ref={cardFixedRef}>\n          <Form\n            className=\"crow-card-fixed\"\n            onSubmit={onSubmit}\n          >\n            <Form.Control\n              type=\"text\"\n              value={newCrow}\n              required\n              placeholder=\"글을 작성해라 까악~\"\n              onChange={onEditChange}\n            />\n            <LoadingButton\n              type=\"submit\"\n              isLoading={isSubmitting}\n              className=\"fixed-button\"\n            >수정</LoadingButton>\n            <Button\n              type=\"button\"\n              variant=\"\"\n              onClick={onEditCancle}\n              className=\"cancle-button\"\n            >취소</Button>\n          </Form>\n        </div>\n      </CSSTransition>\n\n      <CSSTransition\n        nodeRef={cardRef}\n        in={!isEditing}\n        timeout={cardTimeout}\n        classNames={cardCss}\n        mountOnEnter\n        unmountOnExit\n      >\n        <div ref={cardRef}>\n          <div className=\"crow-card\">\n            { isOwner &&\n              <div className=\"crow-card--btn-group\">\n                <Button\n                  type=\"button\"\n                  className=\"crow-card__btn-edit\"\n                  variant=\"\"\n                  onClick={toggleEditing}\n                ><FontAwesomeIcon icon ={faPen} /></Button>\n                <LoadingButton\n                  type=\"button\"\n                  className=\"crow-card__btn-delete\"\n                  buttonClick={onDeleteClick}\n                  isLoading={isSubmitting}\n                ><FontAwesomeIcon icon ={faTrashAlt} /></LoadingButton>\n              </div>\n            }\n            <span className=\"crow-card--text\">{crowObject.text}</span>\n            { crowObject.imgUrl &&\n              <img src={crowObject.imgUrl} width=\"50px\" height=\"50px\" alt=\"upload profile\" />\n            }\n          </div>\n        </div>\n      </CSSTransition>\n    </>\n  );\n}\n\nexport default Crow;","import React, { useState, useRef } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { dbService, storageService } from 'firebaseSetup';\nimport { COLLECTION } from '../constants';\nimport { faCrow, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport LoadingButton from 'entities/Button/LoadingButton';\nimport { Button, Form } from 'react-bootstrap';\n\nimport './CrowFactory.scss';\nimport { CSSTransition } from 'react-transition-group';\n\nconst CrowFactory = ({ userObject }) => {\n  const [crow, setCrow] = useState('');\n  const [base64, setBase64] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const imageFileRef = useRef(null);\n\n  const attachCss = 'attach-img';\n  const attachRef = useRef(null);\n  const timeout = 300;\n\n  const onSubmit = async (event) => {\n    if (isSubmitting) return;\n    setIsSubmitting(true);\n    event.preventDefault();\n\n    let imgUrl = '';\n    if (base64) {\n      const fileRef = storageService.ref().child(`${userObject.uid}/${uuid()}`);\n      const res = await fileRef.putString(base64, 'data_url');\n      imgUrl = await res.ref.getDownloadURL();\n      onClearFile();\n    }\n\n    await dbService.collection(COLLECTION).add({\n      text: crow,\n      createdAt: Date.now(),\n      creatorId: userObject.uid,\n      ...imgUrl && { imgUrl },\n    });\n    setCrow('');\n    setIsSubmitting(false);\n  }\n\n  const onChange = (event) => {\n    const { currentTarget: { value } } = event;\n    setCrow(value);\n  };\n\n  const onFileChange = (event) => {\n    const { target: { files } } = event;\n    const [file] = files;\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onloadend = (loadEvent) => {\n      // finish file load\n      setBase64(loadEvent.currentTarget.result);\n    }\n    reader.readAsDataURL(file);\n  }\n\n  const onClearFile = () => {\n    imageFileRef.current.value = null;\n    setBase64(null)\n  };\n\n  return (\n    <div className=\"crow-contain\">\n      <Form onSubmit={onSubmit} className=\"crow-form\">\n        <div className=\"crow-form__crow-container\">\n          <Form.Control\n            type=\"text\"\n            placeholder=\"까악!\"\n            maxLength={120}\n            value={crow}\n            onChange={onChange}\n            disabled={isSubmitting}\n          />\n          <LoadingButton\n            type=\"submit\"\n            isLoading={isSubmitting}\n          >\n            <FontAwesomeIcon icon={faCrow} />\n          </LoadingButton>\n        </div>\n        <CSSTransition\n          nodeRef={attachRef}\n          in={Boolean(base64)}\n          timeout={timeout}\n          classNames={attachCss}\n          mountOnEnter\n          unmountOnExit\n        >\n          <div ref={attachRef}>\n            <div className=\"crow-container__image-preview\">\n              <img src={base64} width=\"50px\" height=\"50px\" alt=\"upload image\" />\n            </div>\n            <Button\n              type=\"button\"\n              variant=\"\"\n              className=\"btn-remove-image\"\n              onClick={onClearFile}\n              disabled={isSubmitting}\n            >사진지우기</Button>\n          </div>\n        </CSSTransition>\n        { !base64 && (\n          <label\n            htmlFor=\"upload_image\"\n            className=\"crow-container--label\"\n          >이미지 추가&nbsp;<FontAwesomeIcon icon={faPlus} /></label>\n        )}\n        <Form.Control\n          type=\"file\"\n          id=\"upload_image\"\n          accept=\"image/*\"\n          ref={imageFileRef}\n          onChange={onFileChange}\n        />\n      </Form>\n    </div>\n  )\n}\n\nexport default CrowFactory;","import React, { useEffect, useState } from 'react';\nimport { dbService } from 'firebaseSetup';\nimport { COLLECTION } from '../constants';\nimport Crow from 'components/Crow';\nimport CrowFactory from 'components/CrowFactory';\n\nconst Home = ({ userObject }) => {\n  const [crows, setCrows] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(COLLECTION).onSnapshot((snap) => {\n      const snaps = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      setCrows(snaps);\n    });\n    return () => {\n      setCrows([]);\n    };\n  }, []);\n\n  return (\n    <div>\n      <CrowFactory userObject={userObject} />\n      {crows.map(item => (\n        <Crow\n          key={item.id}\n          crowObject={item}\n          isOwner={userObject.uid === item.creatorId}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { faUser, faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Navigation.scss'\n\nconst Navigation = ({ userObject }) => {\n  return (\n    <>\n    <nav className=\"navigation\">\n      <ul>\n        <li>\n          <Link to=\"/\">\n            <FontAwesomeIcon icon={faHome} className=\"navigation--icon\" />\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">\n            <FontAwesomeIcon icon={faUser} className=\"navigation--icon\" />\n          </Link>\n        </li>\n      </ul>\n      <span className=\"navigation--user\">{ userObject.displayName }</span>\n      <span className=\"navigation--span\">님&nbsp;환영합니다.</span>\n    </nav>\n    </>\n  )\n};\n\nexport default Navigation;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Auth from 'routes/Auth';\nimport Profile from 'routes/Profile';\nimport Home from '../routes/Home';\nimport Navigation from './Navigation';\n\nconst AppRouter = ({ isLoggedIn, userObject, refreshUser }) => {\n  return (\n    <BrowserRouter>\n      {isLoggedIn && <Navigation userObject={userObject} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div>\n            <Route exact path=\"/\">\n              <Home userObject={userObject} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObject={userObject} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ):(\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n        {/* <Redirect from=\"*\" to=\"/\" /> */}\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default AppRouter;","import React, { useRef } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { CSSTransition } from 'react-transition-group';\nimport './LoadSpinner.scss';\n\nconst LoadSpinner = ({ isLoadded }) => {\n  const nodeRef = useRef(null);\n\n  return (\n    <CSSTransition\n      nodeRef={nodeRef}\n      in={!isLoadded}\n      timeout={500}\n      classNames='loading'\n      mountOnEnter\n      unmountOnExit\n    >\n      <div ref={nodeRef} className=\"body__dimming\">\n        <div className=\"dimming__contain\">\n          <Spinner\n            className=\"dimming--spinner\"\n            animation=\"border\"\n            variant=\"light\"\n          />\n        </div>\n      </div>\n    </CSSTransition>\n  );\n}\n\nexport default LoadSpinner;\n","import { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'firebaseSetup';\nimport { Container } from 'react-bootstrap';\nimport './App.scss'\nimport LoadSpinner from './LoadSpinner';\n\nfunction App() {\n  const [init, setInit] = useState(true);\n  const [userObject, setUserObject] = useState(null);\n  const [isLoadded, setIsLoadded] = useState(false);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      setIsLoadded(false);\n      if (user) {\n        setUserObject({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObject(null);\n      }\n      // setInit(true);\n      setIsLoadded(true);\n    });\n\n    return () => {\n      setUserObject(null);\n    }\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObject({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n  return (\n    <>\n      <Container>\n        { init &&\n          <article className=\"main-article\">\n            <AppRouter\n              isLoggedIn={Boolean(userObject)}\n              userObject={userObject}\n              refreshUser={refreshUser}\n              isLoadded={(isLoadded) => setIsLoadded(isLoadded)}\n            />\n          </article>\n        }\n      </Container>\n      <LoadSpinner isLoadded={isLoadded } />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}